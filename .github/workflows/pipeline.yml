name: Deployment pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]
jobs:
  simple_deployment_pipeline:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Print Node and NPM versions
        run: |
          node -v
          npm -v

      - name: Install dependencies
        run: npm run install:all

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}
          NODE_ENV: test
        run: npm run test

      - name: Build frontend
        run: |
          cd bloglist-frontend
          npm install
          npm run build
          cd ..
          cp -r bloglist-frontend/dist .

      - name: Install Playwright Browsers
        run: |
          cd e2e-tests
          npm install
          npx playwright install --with-deps

      - name: Start application for E2E tests
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}
          NODE_ENV: test
          PORT: 3003
        run: |
          # Kill any existing processes on the required ports
          lsof -ti:3003,5173 | xargs kill -9 || true

          # Start backend
          PORT=3003 npm run start:test &
          echo "Started backend process with PID $!"

                              # Start frontend
          cd bloglist-frontend
          npm run dev &
          FRONTEND_PID=$!
          echo "Started frontend process with PID $FRONTEND_PID"

          # Wait for both services to be ready
          npm install -g wait-on
          echo "Waiting for backend..."
          wait-on -v http://localhost:3003/health --timeout 60000
          echo "Backend is ready!"

          echo "Waiting for frontend..."
          wait-on -v http://localhost:5173 --timeout 60000
          echo "Frontend is ready!"

          # Verify the processes are still running
          if ps -p $FRONTEND_PID > /dev/null; then
            echo "Frontend process is running"
          else
            echo "Frontend process died"
            exit 1
          fi

          # Print running processes and ports for debugging
          echo "Running Node.js processes:"
          ps aux | grep node || true
          echo "Listening ports:"
          netstat -tulpn || true

      - name: Run E2E tests
        env:
          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          SECRET: ${{ secrets.SECRET }}
          NODE_ENV: test
          DEBUG: pw:api,pw:browser*
          PWDEBUG: 1
        run: |
          cd e2e-tests
          # Increase test timeout and add retries
          PLAYWRIGHT_TEST_TIMEOUT=60000 npm run test -- --retries=2 --timeout=60000
        timeout-minutes: 10

      - name: Trigger deployment
        if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
        run: |
          echo "Full URL: https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}"
          curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  tag_release:
    needs: [simple_deployment_pipeline]
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && !contains(github.event.head_commit.message, '#skip') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.73.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
